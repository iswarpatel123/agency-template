---
import Layout from "../layouts/Layout-Checkout.astro";
import Container from "../components/shared/Container.astro";
import Footer from "../layouts/Footer.astro";
---

<Layout title="Order Confirmation - Thank You">
  <main class="order-confirmation-page">
    <Container>
      <div class="confirmation-container">
        <!-- Success Header -->
        <div class="success-header">
          <div class="success-icon">
            <svg width="64" height="64" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <circle cx="12" cy="12" r="10" fill="#10B981"/>
              <path d="M9 12l2 2 4-4" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
          </div>
          <h1>Thank you for your order!</h1>
          <p class="confirmation-message">
            Your order has been confirmed and will be shipped soon. 
            A confirmation email has been sent to your email address.
          </p>
        </div>

        <div class="order-details-grid">
          <!-- Order Summary -->
          <div class="order-summary-card">
            <h2>Order Summary</h2>
            
            <div class="order-info">
              <div class="info-row">
                <span class="label">Order number:</span>
                <span class="value" id="order-number">Loading...</span>
              </div>
              
              <div class="info-row">
                <span class="label">Order date:</span>
                <span class="value" id="order-date">Loading...</span>
              </div>
              
              <div class="info-row">
                <span class="label">Estimated delivery:</span>
                <span class="value" id="delivery-date">Loading..</span>
              </div>
              
              <div class="info-row">
                <span class="label">Delivery method:</span>
                <span class="value">Standard shipping (FREE)</span>
              </div>
            </div>

            <!-- Order Items -->
            <div class="order-items">
              <h3>Items ordered</h3>
              <div id="order-items-list">
                <div class="loading-message">Loading order details...</div>
              </div>
            </div>

            <!-- Pricing Summary -->
            <div class="pricing-summary">
              <div class="price-row">
                <span>Subtotal:</span>
                <span id="subtotal-amount">Loading...</span>
              </div>
              <div class="price-row">
                <span>Shipping:</span>
                <span>FREE</span>
              </div>
              <div class="price-row">
                <span>Tax:</span>
                <span>Included</span>
              </div>
              <div class="price-row total">
                <span>Total:</span>
                <span id="total-amount">Loading...</span>
              </div>
            </div>
          </div>

          <!-- Shipping Information -->
          <div class="shipping-info-card">
            <h2>Shipping Information</h2>
            <div id="shipping-address">
              <div class="loading-message">Loading shipping details...</div>
            </div>
            
            <div class="tracking-info">
              <h3>Track your order</h3>
              <p>You'll receive a tracking number via email once your order ships. You can also track your order status by visiting our order tracking page.</p>
              <button class="track-order-btn">Track Order</button>
            </div>
          </div>
        </div>

        <!-- Next Steps -->
        <div class="next-steps">
          <h2>What happens next?</h2>
          <div class="steps-grid">
            <div class="step">
              <div class="step-icon">
                <svg width="32" height="32" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" stroke="#6B7280" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
              </div>
              <h4>Order Confirmation</h4>
              <p>You'll receive an email confirmation with your order details and tracking information.</p>
            </div>
            
            <div class="step">
              <div class="step-icon">
                <svg width="32" height="32" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M16 4h2a2 2 0 012 2v14a2 2 0 01-2 2H6a2 2 0 01-2-2V6a2 2 0 012-2h2m4-2v6m0 0l-2-2m2 2l2-2" stroke="#6B7280" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
              </div>
              <h4>Order Processing</h4>
              <p>We'll prepare your order for shipment within 24-48 hours.</p>
            </div>
            
            <div class="step">
              <div class="step-icon">
                <svg width="32" height="32" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" stroke="#6B7280" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
              </div>
              <h4>Shipping Updates</h4>
              <p>Track your package with the tracking number we'll send you via email.</p>
            </div>
          </div>
        </div>

        <!-- Customer Support -->
        <div class="customer-support">
          <h2>Need help?</h2>
          <p>If you have any questions about your order, please don't hesitate to contact our customer support team.</p>
          <div class="support-actions">
            <a href="/contact" class="support-btn">Contact Support</a>
            <a href="/returns" class="support-btn secondary">Return Policy</a>
          </div>
        </div>

        <!-- Continue Shopping -->
        <div class="continue-shopping">
          <a href="/" class="continue-btn" id="continue-shopping-btn">Continue Shopping</a>
        </div>
      </div>
    </Container>
  </main>
  <Footer />
</Layout>

<style>
  .order-confirmation-page {
    background: #f8fafc;
    min-height: 100vh;
    padding: 2rem 0;
  }

  .confirmation-container {
    max-width: 1000px;
    margin: 0 auto;
    padding: 0 1rem;
  }

  .success-header {
    text-align: center;
    margin-bottom: 3rem;
    background: white;
    padding: 3rem 2rem;
    border-radius: 1rem;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
  }

  .success-icon {
    margin: 0 auto 1.5rem;
    width: 64px;
    height: 64px;
  }

  .success-header h1 {
    font-size: 2.5rem;
    font-weight: 700;
    color: #111827;
    margin-bottom: 1rem;
  }

  .confirmation-message {
    font-size: 1.125rem;
    color: #6B7280;
    max-width: 600px;
    margin: 0 auto;
    line-height: 1.6;
  }

  .order-details-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 2rem;
    margin-bottom: 3rem;
  }

  .order-summary-card,
  .shipping-info-card {
    background: white;
    padding: 2rem;
    border-radius: 1rem;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
  }

  .order-summary-card h2,
  .shipping-info-card h2 {
    font-size: 1.5rem;
    font-weight: 600;
    color: #111827;
    margin-bottom: 1.5rem;
    border-bottom: 2px solid #E5E7EB;
    padding-bottom: 0.5rem;
  }

  .order-info {
    margin-bottom: 2rem;
  }

  .info-row {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.75rem 0;
    border-bottom: 1px solid #F3F4F6;
  }

  .info-row:last-child {
    border-bottom: none;
  }

  .label {
    color: #6B7280;
    font-weight: 500;
  }

  .value {
    color: #111827;
    font-weight: 600;
  }

  .order-items h3 {
    font-size: 1.25rem;
    font-weight: 600;
    color: #111827;
    margin-bottom: 1rem;
  }

  .order-item {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 1rem 0;
    border-bottom: 1px solid #F3F4F6;
  }

  .order-item:last-child {
    border-bottom: none;
  }

  .item-image {
    width: 60px;
    height: 60px;
    object-fit: cover;
    border-radius: 0.5rem;
    border: 1px solid #E5E7EB;
  }

  .item-details h4 {
    font-weight: 600;
    color: #111827;
    margin-bottom: 0.25rem;
    font-size: 1rem;
  }

  .item-details p {
    color: #6B7280;
    font-size: 0.875rem;
    margin: 0.125rem 0;
  }

  .pricing-summary {
    margin-top: 2rem;
    padding-top: 1rem;
    border-top: 2px solid #E5E7EB;
  }

  .price-row {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.5rem 0;
  }

  .price-row.total {
    font-weight: 700;
    font-size: 1.125rem;
    border-top: 1px solid #E5E7EB;
    margin-top: 0.5rem;
    padding-top: 1rem;
    color: #111827;
  }

  .shipping-address {
    background: #F9FAFB;
    padding: 1rem;
    border-radius: 0.5rem;
    margin-bottom: 1.5rem;
    border: 1px solid #E5E7EB;
  }

  .address-line {
    margin-bottom: 0.25rem;
    color: #374151;
  }

  .address-line:last-child {
    margin-bottom: 0;
  }

  .tracking-info h3 {
    font-size: 1.125rem;
    font-weight: 600;
    color: #111827;
    margin-bottom: 0.5rem;
  }

  .tracking-info p {
    color: #6B7280;
    margin-bottom: 1rem;
    line-height: 1.5;
  }

  .track-order-btn {
    background: #1F2937;
    color: white;
    padding: 0.75rem 1.5rem;
    border: none;
    border-radius: 0.5rem;
    font-weight: 600;
    cursor: pointer;
    transition: background-color 0.2s;
  }

  .track-order-btn:hover {
    background: #374151;
  }

  .next-steps {
    background: white;
    padding: 2rem;
    border-radius: 1rem;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    margin-bottom: 2rem;
  }

  .next-steps h2 {
    font-size: 1.5rem;
    font-weight: 600;
    color: #111827;
    margin-bottom: 1.5rem;
    text-align: center;
  }

  .steps-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 2rem;
  }

  .step {
    text-align: center;
  }

  .step-icon {
    margin: 0 auto 1rem;
    width: 48px;
    height: 48px;
    background: #F3F4F6;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .step h4 {
    font-weight: 600;
    color: #111827;
    margin-bottom: 0.5rem;
  }

  .step p {
    color: #6B7280;
    font-size: 0.875rem;
    line-height: 1.5;
  }

  .customer-support {
    background: white;
    padding: 2rem;
    border-radius: 1rem;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    margin-bottom: 2rem;
    text-align: center;
  }

  .customer-support h2 {
    font-size: 1.5rem;
    font-weight: 600;
    color: #111827;
    margin-bottom: 1rem;
  }

  .customer-support p {
    color: #6B7280;
    margin-bottom: 1.5rem;
    line-height: 1.6;
  }

  .support-actions {
    display: flex;
    gap: 1rem;
    justify-content: center;
  }

  .support-btn {
    padding: 0.75rem 1.5rem;
    border-radius: 0.5rem;
    font-weight: 600;
    text-decoration: none;
    transition: all 0.2s;
  }

  .support-btn:not(.secondary) {
    background: #1F2937;
    color: white;
  }

  .support-btn:not(.secondary):hover {
    background: #374151;
  }

  .support-btn.secondary {
    background: #F3F4F6;
    color: #374151;
    border: 1px solid #D1D5DB;
  }

  .support-btn.secondary:hover {
    background: #E5E7EB;
  }

  .continue-shopping {
    text-align: center;
  }

  .continue-btn {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    background: #FBBF24;
    color: #000;
    padding: 1rem 2rem;
    border-radius: 0.5rem;
    font-weight: 600;
    text-decoration: none;
    transition: background-color 0.2s;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
  }

  .continue-btn:hover {
    background: #F59E0B;
  }

  .loading-message,
  .no-data-message {
    text-align: center;
    padding: 2rem;
    color: #6B7280;
    font-style: italic;
  }

  .error-message {
    text-align: center;
    padding: 2rem;
    color: #DC2626;
    background: #FEF2F2;
    border-radius: 0.5rem;
    border: 1px solid #FECACA;
  }

  @media (max-width: 768px) {
    .order-details-grid {
      grid-template-columns: 1fr;
    }

    .steps-grid {
      grid-template-columns: 1fr;
      gap: 1.5rem;
    }

    .support-actions {
      flex-direction: column;
      align-items: center;
    }

    .success-header {
      padding: 2rem 1rem;
    }

    .success-header h1 {
      font-size: 2rem;
    }

    .order-summary-card,
    .shipping-info-card,
    .next-steps,
    .customer-support {
      padding: 1.5rem;
    }
  }
</style>

<script>
  // Import the checkout service functions
  import { getOrderData, clearCheckoutData, clearOrderData } from '../utils/checkout/checkoutService';

  document.addEventListener('DOMContentLoaded', () => {
    try {
      // Get order data from localStorage (not URL)
      const orderData = getOrderData();
      
      // Populate order information
      populateOrderInfo(orderData);
      populateOrderItems(orderData);
      populateShippingAddress(orderData);
      
      // Set up continue shopping button to clear checkout data
      const continueBtn = document.getElementById('continue-shopping-btn');
      if (continueBtn) {
        continueBtn.addEventListener('click', () => {
          // Clear checkout data when user continues shopping
          clearCheckoutData();
        });
      }
      
    } catch (error) {
      console.error('Error loading order confirmation:', error);
      showErrorState();
    }
  });

  function populateOrderInfo(orderData: any) {
    const orderNumberEl = document.getElementById('order-number');
    const orderDateEl = document.getElementById('order-date');
    const deliveryDateEl = document.getElementById('delivery-date');
    
    if (orderNumberEl) {
      orderNumberEl.textContent = orderData.orderId || `ORD-${Date.now()}`;
    }
    
    if (orderDateEl) {
      const orderDate = orderData.orderDate ? new Date(orderData.orderDate) : new Date();
      orderDateEl.textContent = orderDate.toLocaleDateString('en-US', {
        weekday: 'long',
        year: 'numeric',
        month: 'long',
        day: 'numeric'
      });
    }
    
    if (deliveryDateEl) {
      const deliveryDate = new Date();
      deliveryDate.setDate(deliveryDate.getDate() + 7);
      deliveryDateEl.textContent = deliveryDate.toLocaleDateString('en-US', {
        weekday: 'long',
        month: 'long',
        day: 'numeric'
      });
    }
  }

  function populateOrderItems(orderData: any) {
    const orderItemsList = document.getElementById('order-items-list');
    const subtotalElement = document.getElementById('subtotal-amount');
    const totalElement = document.getElementById('total-amount');
    
    if (!orderItemsList) return;
    
    if (!orderData.items || orderData.items.length === 0) {
      orderItemsList.innerHTML = '<div class="no-data-message">No order items found. Please contact support if you need assistance.</div>';
      return;
    }
    
    // Clear loading message
    orderItemsList.innerHTML = '';
    
    // Color to image mapping
    const colorImages: Record<string, string> = {
      'Black': 'https://ae-pic-a1.aliexpress-media.com/kf/Sa97cb0ece6b94cbb8f31155e98fc1c03V.jpg_640x640.jpg_.webp',
      'Pink': 'https://ae-pic-a1.aliexpress-media.com/kf/S899d2197729b4fd394499cd32e08b0696.jpg_640x640.jpg_.webp',
      'White': 'https://ae-pic-a1.aliexpress-media.com/kf/S31dfedd525514b90b956c5f8343bf2f8z.jpg_640x640.jpg_.webp'
    };
    
    // Pricing information
    const prices: Record<number, { pricePerPair: number; originalPrice: number }> = {
      1: { pricePerPair: 69.99, originalPrice: 139.99 },
      2: { pricePerPair: 62.99, originalPrice: 139.99 },
      3: { pricePerPair: 55.99, originalPrice: 139.99 }
    };
    
    const quantity = orderData.items.length;
    const priceInfo = prices[quantity] || prices[1];
    
    // Display each item
    orderData.items.forEach((item: any) => {
      const itemDiv = document.createElement('div');
      itemDiv.className = 'order-item';
      
      itemDiv.innerHTML = `
        <img src="${colorImages[item.color] || colorImages['Black']}" alt="FootBound X1" class="item-image" />
        <div class="item-details">
          <h4>FootBound X1 - ${item.color}</h4>
          <p>Size: MEN ${item.size} / WOMEN ${Number(item.size) + 1.5}</p>
          <p>Quantity: 1</p>
          <p>Price: $${priceInfo.pricePerPair.toFixed(2)}</p>
        </div>
      `;
      
      orderItemsList.appendChild(itemDiv);
    });
    
    // Update pricing
    const totalAmount = orderData.totalAmount || (quantity * priceInfo.pricePerPair);
    
    if (subtotalElement) {
      subtotalElement.textContent = `$${totalAmount.toFixed(2)}`;
    }
    if (totalElement) {
      totalElement.textContent = `$${totalAmount.toFixed(2)}`;
    }
  }

  function populateShippingAddress(orderData: any) {
    const shippingAddressElement = document.getElementById('shipping-address');
    if (!shippingAddressElement) return;
    
    const address = orderData.shippingAddress;
    
    if (!address || !address.address1) {
      shippingAddressElement.innerHTML = `
        <div class="shipping-address">
          <div class="address-line no-data-message">Shipping address will be confirmed via email</div>
        </div>
      `;
      return;
    }
    
    let addressHTML = `
      <div class="shipping-address">
        <div class="address-line"><strong>${address.firstName} ${address.lastName}</strong></div>
    `;
    
    if (orderData.email) {
      addressHTML += `<div class="address-line">${orderData.email}</div>`;
    }
    
    addressHTML += `<div class="address-line">${address.address1}</div>`;
    
    if (address.address2) {
      addressHTML += `<div class="address-line">${address.address2}</div>`;
    }
    
    addressHTML += `
        <div class="address-line">${address.city}, ${address.state} ${address.zipCode}</div>
        <div class="address-line">${address.country || 'United States'}</div>
      </div>
    `;
    
    shippingAddressElement.innerHTML = addressHTML;
  }

  function showErrorState() {
    const orderItemsList = document.getElementById('order-items-list');
    const shippingAddressElement = document.getElementById('shipping-address');
    
    const errorMessage = '<div class="error-message">Unable to load order details. Please contact support for assistance.</div>';
    
    if (orderItemsList) {
      orderItemsList.innerHTML = errorMessage;
    }
    
    if (shippingAddressElement) {
      shippingAddressElement.innerHTML = errorMessage;
    }
  }
</script>