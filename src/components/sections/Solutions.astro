---
import { Image } from "astro:assets";
import Paragraph from "../shared/Paragraph.astro";
import Title from "../shared/Title.astro";
import GradiantText from "../shared/GradiantText.astro";
import { solutions } from "../../utils/data.ts";

type SolutionProps = {
  title: string;
  solution: string;
  img: string;
};

export interface Props {
  className?: string;
}

const { className } = Astro.props;
---

<section id="solutions" class=`flex flex-col ${className}`>
  {
    solutions.map((solution: SolutionProps, index: number) => {
      const oddIndex = index % 2 === 0;
      const flexRow = oddIndex ? "midmd:flex-row-reverse" : "midmd:flex-row";
      const imgAlign = oddIndex ? "midmd:justify-start pl-0" : "midmd:justify-end pr-0";
      const bgColor = oddIndex
        ? "bg-orange-100 dark:bg-gray-800 "
        : "bg-transparent";
      return (
        <div class={`w-100 py-10 md:py-16 ${bgColor}`}>
          <div
            class={`flex flex-col space-y-8 midmd:space-y-0 ${flexRow} mx-auto max-w-6xl w-full items-center`}
          >
            <div class="max-w-md mx-auto w-11/12 flex-1 flex midmd:w-6/12 lg:w-5/12 flex-col justify-center px-4">
              <Title>
                <GradiantText>{solution.title}</GradiantText>
              </Title>
              <Paragraph className="mt-8 font-medium">
                {solution.solution}
              </Paragraph>
            </div>

            <div class={`max-w-md mx-auto midmd:max-w-none flex-1 flex w-11/12 midmd:w-6/12 lg:w-7/12 midmd:h-auto ${imgAlign}`}>
              <div class="rounded-[32px] border border-black overflow-hidden w-[400px]">
                <img
                  src={solution.img}
                  alt={solution.title}
                  width="400"
                  height="600"
                  class="w-full h-auto object-cover"
                />
              </div>
            </div>
          </div>
        </div>
      );
    })
  }
</section>
