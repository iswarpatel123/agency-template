---
interface Props {
  type: "shipping" | "billing";
}

const { type } = Astro.props;
---

<div class="address-form">
  <div class="name-fields">
    <div class="input-group">
      <input
        type="text"
        id={`firstName-${type}`}
        placeholder="First name"
        data-validation-type="firstName"
        required
        aria-describedby={`firstName-${type}-error`}
      />
      <div id={`firstName-${type}-error`} class="error-message" hidden></div>
    </div>
    <div class="input-group">
      <input
        type="text"
        id={`lastName-${type}`}
        placeholder="Last name"
        data-validation-type="lastName"
        required
        aria-describedby={`lastName-${type}-error`}
      />
      <div id={`lastName-${type}-error`} class="error-message" hidden></div>
    </div>
  </div>

  <label for={`${type}-country`}>Country/Region</label>
  <select id={`${type}-country`} name={`${type}-country`} required>
    <option value="US" selected>United States</option>
  </select>

  <div class="input-group">
    <input
      type="text"
      id={`address1-${type}`}
      placeholder="Address Line 1"
      data-validation-type="address"
      required
      aria-describedby={`address1-${type}-error`}
    />
    <div id={`address1-${type}-error`} class="error-message" hidden></div>
  </div>

  <input
    type="text"
    placeholder="Address Line 2 (Optional)"
    id={`address2-${type}`}
    data-validation-type="address"
  />

  <div class="city-state-zip">
    <div class="input-group">
      <input
        type="text"
        id={`city-${type}`}
        placeholder="City"
        data-validation-type="city"
        required
        aria-describedby={`city-${type}-error`}
      />
      <div id={`city-${type}-error`} class="error-message" hidden></div>
    </div>

    <select id={`state-${type}`} name={`state-${type}`} required>
      <option value="" disabled selected>State</option>
      <option value="AL">Alabama</option>
      <option value="AK">Alaska</option>
      <option value="AZ">Arizona</option>
      <option value="AR">Arkansas</option>
      <option value="CA">California</option>
      <option value="CO">Colorado</option>
      <option value="CT">Connecticut</option>
      <option value="DE">Delaware</option>
      <option value="FL">Florida</option>
      <option value="GA">Georgia</option>
      <option value="HI">Hawaii</option>
      <option value="ID">Idaho</option>
      <option value="IL">Illinois</option>
      <option value="IN">Indiana</option>
      <option value="IA">Iowa</option>
      <option value="KS">Kansas</option>
      <option value="KY">Kentucky</option>
      <option value="LA">Louisiana</option>
      <option value="ME">Maine</option>
      <option value="MD">Maryland</option>
      <option value="MA">Massachusetts</option>
      <option value="MI">Michigan</option>
      <option value="MN">Minnesota</option>
      <option value="MS">Mississippi</option>
      <option value="MO">Missouri</option>
      <option value="MT">Montana</option>
      <option value="NE">Nebraska</option>
      <option value="NV">Nevada</option>
      <option value="NH">New Hampshire</option>
      <option value="NJ">New Jersey</option>
      <option value="NM">New Mexico</option>
      <option value="NY">New York</option>
      <option value="NC">North Carolina</option>
      <option value="ND">North Dakota</option>
      <option value="OH">Ohio</option>
      <option value="OK">Oklahoma</option>
      <option value="OR">Oregon</option>
      <option value="PA">Pennsylvania</option>
      <option value="RI">Rhode Island</option>
      <option value="SC">South Carolina</option>
      <option value="SD">South Dakota</option>
      <option value="TN">Tennessee</option>
      <option value="TX">Texas</option>
      <option value="UT">Utah</option>
      <option value="VT">Vermont</option>
      <option value="VA">Virginia</option>
      <option value="WA">Washington</option>
      <option value="WV">West Virginia</option>
      <option value="WI">Wisconsin</option>
      <option value="WY">Wyoming</option>
    </select>

    <div class="input-group">
      <input
        type="text"
        id={`zip-${type}`}
        placeholder="Zip Code"
        data-validation-type="zipCode"
        required
        aria-describedby={`zip-${type}-error`}
      />
      <div id={`zip-${type}-error`} class="error-message" hidden></div>
    </div>
  </div>

  <div class="input-group">
    <input
      type="text"
      id={`phone-${type}`}
      placeholder="Phone Number"
      data-validation-type="phoneNumber"
      required
      aria-describedby={`phone-${type}-error`}
    />
    <div id={`phone-${type}-error`} class="error-message" hidden></div>
  </div>
</div>

<script>
  import { validateField } from "../../../utils/form/formUtils";

  // Get all form elements in this address form
  const form = document.querySelector(".address-form");
  const inputs = form?.querySelectorAll("input[data-validation-type]");

  if (inputs) {
    inputs.forEach((input) => {
      if (!(input instanceof HTMLInputElement)) return;

      // Validate on blur if the field has a value
      input.addEventListener("blur", () => {
        if (input.value.trim()) {
          validateField(input, true);
        }
      });

      // Clear error on input
      input.addEventListener("input", () => {
        const errorId = `${input.id}-error`;
        const errorElement = document.getElementById(errorId);
        if (errorElement) {
          errorElement.textContent = "";
          errorElement.hidden = true;
        }
        input.setAttribute("aria-invalid", "false");
      });
    });
  }
</script>

<style>
  .input-group {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
    width: 100%;
  }

  .error-message {
    color: #dc2626;
    font-size: 0.875rem;
    margin-top: 0.25rem;
  }

  .city-state-zip {
    display: flex;
    gap: 0.5rem;
  }

  .city-state-zip input {
    width: 100%;
  }

  .address-form {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .name-fields {
    display: flex;
    gap: 1rem;
  }

  input,
  select {
    padding: 0.75rem;
    border: 1px solid #333;
    border-radius: 4px;
    background: #f9f9f9;
    color: #000;
    font-weight: 600;
    width: 100%;
  }

  /* Remove HTML5 validation styles */
  input:invalid:not(:placeholder-shown) {
    border-color: inherit;
  }

  input:valid:not(:placeholder-shown) {
    border-color: inherit;
  }

  input[aria-invalid="true"] {
    border-color: #dc2626;
  }

  label {
    color: #000;
  }

  @media (max-width: 600px) {
    .name-fields {
      flex-direction: column;
      gap: 0.5rem;
    }
  }
</style>
